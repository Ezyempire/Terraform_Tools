resource "aws_vpc" "terraform_vpc" {
  cidr_block           = var.vpc_cidr
  instance_tenancy     = "default"
  enable_dns_support   = true
  enable_dns_hostnames = true
  tags = {
    Name = "terra_vpc"
  }
}

resource "aws_subnet" "pub_subnet" {
  vpc_id            = aws_vpc.terraform_vpc.id
  cidr_block        = var.pub_subnet
  availability_zone = var.pub_sub_availability_zone
  tags = {
    Name = "public_sub"
  }
}
resource "aws_subnet" "private_sub" {
  vpc_id            = aws_vpc.terraform_vpc.id
  cidr_block        = var.priv_subnet
  availability_zone = var.pri_sub_availability_zone
  tags = {
    Name = "priv_subnet"
  }
}

resource "aws_internet_gateway" "terraform_igw" {
  vpc_id = aws_vpc.terraform_vpc.id

  tags = {
    Name = "terra_igw"
  }
}

resource "aws_route_table" "terraform_rt" {
  vpc_id = aws_vpc.terraform_vpc.id
}

resource "aws_route" "terraform_route" {
  route_table_id         = aws_route_table.terraform_rt.id
  destination_cidr_block = "0.0.0.0/0"
  gateway_id             = aws_internet_gateway.terraform_igw.id
}

resource "aws_route_table_association" "terraform_rta" {
  subnet_id      = aws_subnet.pub_subnet.id
  route_table_id = aws_route_table.terraform_rt.id
}

resource "aws_security_group" "public_SG" {
  name        = "all_traffic"
  description = "allow all traffic in public SG"
  vpc_id      = aws_vpc.terraform_vpc.id

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  ingress {
    from_port   = 0
    to_port     = 0
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "open_SG"
  }
}
